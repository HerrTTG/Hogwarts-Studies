##grep -E 支持扩展正则
##grep -A5 匹配内容行以及接下来的5行
##grep -B5 匹配内容行以及前面的5行
##grep -C5 匹配内容含以及上下5行
##grep -c  类似于wc -l 统计
##grep -v  取反，展示匹配内容以外的行
##grep -n  显示行号
##grep -i  忽略大小写
##grep -w  内容精准匹配
##grep -l  匹配内容的文件，不显示具体内容
##grep -r  递归，当前目录找不到，就去别的目录找
##grep -n  显示行号


##基础正则Basic RE BRE##

grep  '^123' *.dat  ## ^表示以什么开头的行

grep '123$' *.dat   ## $表示以什么结尾的行$  末尾可能有空格

cat -A              ##显示隐藏字符  检查一下

grep -n '^$' *.dat  ##^$相当于空行 找某行为空.注意空格相当于字符，不属于空行 

grep -nv '^$' *.dat  ##grep -v 排除复合条件的行，展示其他行，此命令用于排除空行


grep '.' *.dat      ## .表示任意一个字符 .不匹配空行。空行不算字符，所以排除掉了

grep '\.$' *.dat    ## \ 转义字符 脱掉马甲，去除特殊含义，变成字面意思。 另外还有转义字符序列 \n 回车换行 \t tab键  等等

grep '0*'  *.dat    ## * 表示前一个字符连续出现0次或者0次以上  0  00  000 连续出现 1 2 3 

grep '.*'  *.dat    ## .* 所有内容  包含空行 相当于通配符的*

grep '^.*t' *.dat   ## 从开头到出现t的所有内容，不会因为第一个t出现停止   原因是贪婪
##正则特色：贪婪性 .* 表示所有或*连续出现时 ，会尽可能的贪婪匹配


##正则 2* 0*为何多匹配内容 
##数字2 出现了0次以上 2  2222 222222222222222
##数字2  出现了0次 相当于空  grep '' 文件 显示全部内容


grep -on '[123]' *.dat ##  [a-z] [A-Z] [0-9]  [abc] 一次匹配一个字符 ，匹配任意一个字符a或者b或者c   grep -o 表示显示匹配过程

grep -on '[a-zA-Z0-9]' *.dat or grep -on '[a-Z0-9]' *.dat  or grep -ion '[a-z0-9]' *.dat  ## grep -i 不区分大小写

##[] 里面的特殊字符 如. 空格 |  都是直接匹配原本的符号意思

grep -on '[^123]' *.dat  ##[^] 表示取反 排除的意思



#扩展正则 Exetended RE ERE#

egrep '0+' *.dat  OR  grep -E '0+' *.dat OR grep '0\+' *.dat ## + 前一个字符连续出现了1次或1次以上 
#grep 不直接支持扩展命令，需要用egrep 或者grep -E 或者转义字符转义#

egrep '[0-9]+' *.dat ##匹配出 连续的数字  
egrep '[a-Z]+' *.dat ##匹配出 所有的单词

egrep -o '[0-9]+' *.dat ## 只显示匹配过程，即只显示连续的数字 不包含所在行其他内容


egrep '123|234' *.dat ## | 在扩展正则中表示或者 


egrep -o 'haizh(e|a)nyu' *.dat  ## () 表示括起来的内容 相当是一个整体 或者 反向引用(一般在sed 命令中) 
egrep -o 'haizh[ea]nyu' *.dat  ##因为只有一个字符不一样 等价于[] 如果字符过多，就不等价 

egrep -o 'haizhe|anyu' *.dat  ## 如果不加小括号，匹配为haizhen 或者anyu 。加了小括号匹配 haizhenyu 或者haizhanyu 



egrep -o '1{1,2}' *.dat ## {} 表示连续出现  a{n,m} 前一个字符a 至少出现了n次，最多连续出现了m次
egrep -o '1{3}' *.dat  ## a{n} 前一个字符 正好出现了n次
## a{n,} 前一个字符至少出现N次 多的不限
## a{,m} 前一个字符最多出现M次 少的不限 



egrep -o 'go?d' *.dat ## ? 表示连续出现 , 前一个字符出现0次或者一次 表示o存在或者不存在都匹配，
##等价于 egrep 'god|gd' *.dat



简单习题：
1.过滤出 id.txt 中符合要求的身份证号码
egrep '^[0-9]{17}[0-9X]$' id.txt  ## 前17位为数字，最后一位为0-9或者大X 

2.排除文件中的空行或者含有#的行
egrep -v '^$|#' 