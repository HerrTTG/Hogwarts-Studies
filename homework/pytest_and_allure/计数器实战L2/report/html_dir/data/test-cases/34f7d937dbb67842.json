{
  "uid": "34f7d937dbb67842",
  "name": "除法无效用例:$%%^&*/中文",
  "fullName": "计算器实战L2.Test#test_div_error",
  "historyId": "8ec9ab287f2a8713e140bbde76b8418d",
  "time": {
    "start": 1708157531620,
    "stop": 1708157531621,
    "duration": 1
  },
  "description": "\n        计算器进阶功能的无效用例。\n        使用数据参数化的方法,调用getdate函数获取用例的参数。\n        步骤一：\n        计算a/b\n        步骤二：\n        断言a/b==c\n        因为输入中a或者b中包含一些无效的非整数输入，\n        所以用例将会失败。用xfail进行标记。\n        ",
  "descriptionHtml": "<pre><code>    计算器进阶功能的无效用例。\n    使用数据参数化的方法,调用getdate函数获取用例的参数。\n    步骤一：\n    计算a/b\n    步骤二：\n    断言a/b==c\n    因为输入中a或者b中包含一些无效的非整数输入，\n    所以用例将会失败。用xfail进行标记。\n</code></pre>\n",
  "status": "skipped",
  "statusMessage": "XFAIL\n\nTypeError: '>' not supported between instances of 'str' and 'int'",
  "statusTrace": "self = <计算器实战L2.Test object at 0x03C2AF90>, a = '$%%^&*', b = '中文'\nc = 'TypeError'\n\n    @pytest.mark.xfail\n    @pytest.mark.advtest\n    @allure.feature('除法功能')\n    @allure.story('除法无效场景')\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.parametrize(\"a, b, c\", getdate('除法e.yaml'))\n    def test_div_error(self, a, b, c):\n        \"\"\"\n        计算器进阶功能的无效用例。\n        使用数据参数化的方法,调用getdate函数获取用例的参数。\n        步骤一：\n        计算a/b\n        步骤二：\n        断言a/b==c\n        因为输入中a或者b中包含一些无效的非整数输入，\n        所以用例将会失败。用xfail进行标记。\n        \"\"\"\n        tester = Calculator()\n        # 动态更新用例标题，可以参与到用例执行中去增加当前用例的标题名\n        allure.dynamic.title(f\"除法无效用例:{a}/{b}\")\n        with allure.step('测试步骤一,尝试进行计算'):\n>           sum = tester.div(a, b)\n\n计算器实战L2.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <计算器实战L2.Calculator object at 0x021DF270>, a = '$%%^&*', b = '中文'\n\n    def div(self, a, b):\n>       if a > 99 or a < -99 or b > 99 or b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\n计算器实战L2.py:52: TypeError",
  "flaky": false,
  "newFailed": false,
  "beforeStages": [],
  "testStage": {
    "description": "\n        计算器进阶功能的无效用例。\n        使用数据参数化的方法,调用getdate函数获取用例的参数。\n        步骤一：\n        计算a/b\n        步骤二：\n        断言a/b==c\n        因为输入中a或者b中包含一些无效的非整数输入，\n        所以用例将会失败。用xfail进行标记。\n        ",
    "status": "skipped",
    "statusMessage": "XFAIL\n\nTypeError: '>' not supported between instances of 'str' and 'int'",
    "statusTrace": "self = <计算器实战L2.Test object at 0x03C2AF90>, a = '$%%^&*', b = '中文'\nc = 'TypeError'\n\n    @pytest.mark.xfail\n    @pytest.mark.advtest\n    @allure.feature('除法功能')\n    @allure.story('除法无效场景')\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.parametrize(\"a, b, c\", getdate('除法e.yaml'))\n    def test_div_error(self, a, b, c):\n        \"\"\"\n        计算器进阶功能的无效用例。\n        使用数据参数化的方法,调用getdate函数获取用例的参数。\n        步骤一：\n        计算a/b\n        步骤二：\n        断言a/b==c\n        因为输入中a或者b中包含一些无效的非整数输入，\n        所以用例将会失败。用xfail进行标记。\n        \"\"\"\n        tester = Calculator()\n        # 动态更新用例标题，可以参与到用例执行中去增加当前用例的标题名\n        allure.dynamic.title(f\"除法无效用例:{a}/{b}\")\n        with allure.step('测试步骤一,尝试进行计算'):\n>           sum = tester.div(a, b)\n\n计算器实战L2.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <计算器实战L2.Calculator object at 0x021DF270>, a = '$%%^&*', b = '中文'\n\n    def div(self, a, b):\n>       if a > 99 or a < -99 or b > 99 or b < -99:\nE       TypeError: '>' not supported between instances of 'str' and 'int'\n\n计算器实战L2.py:52: TypeError",
    "steps": [
      {
        "name": "测试步骤一,尝试进行计算",
        "time": {
          "start": 1708157531620,
          "stop": 1708157531620,
          "duration": 0
        },
        "status": "broken",
        "statusMessage": "TypeError: '>' not supported between instances of 'str' and 'int'\n",
        "statusTrace": "  File \"E:\\霍格沃茨学社\\Hogwarts-Studies\\homework\\pytest_and_allure\\计数器实战L2\\计算器实战L2.py\", line 189, in test_div_error\n    sum = tester.div(a, b)\n          ^^^^^^^^^^^^^^^^\n  File \"E:\\霍格沃茨学社\\Hogwarts-Studies\\homework\\pytest_and_allure\\计数器实战L2\\计算器实战L2.py\", line 52, in div\n    if a > 99 or a < -99 or b > 99 or b < -99:\n       ^^^^^^\n",
        "steps": [],
        "attachments": [],
        "parameters": [],
        "hasContent": true,
        "stepsCount": 0,
        "attachmentsCount": 0,
        "shouldDisplayMessage": true
      }
    ],
    "attachments": [],
    "parameters": [],
    "hasContent": true,
    "stepsCount": 1,
    "attachmentsCount": 0,
    "shouldDisplayMessage": true
  },
  "afterStages": [],
  "labels": [
    {
      "name": "feature",
      "value": "除法功能"
    },
    {
      "name": "severity",
      "value": "minor"
    },
    {
      "name": "epic",
      "value": "计算器需求"
    },
    {
      "name": "story",
      "value": "除法无效场景"
    },
    {
      "name": "tag",
      "value": "advtest"
    },
    {
      "name": "tag",
      "value": "@pytest.mark.xfail"
    },
    {
      "name": "suite",
      "value": "计算器实战L2"
    },
    {
      "name": "subSuite",
      "value": "Test"
    },
    {
      "name": "host",
      "value": "ZJS-E14"
    },
    {
      "name": "thread",
      "value": "20868-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "计算器实战L2"
    },
    {
      "name": "resultFormat",
      "value": "allure2"
    }
  ],
  "parameters": [
    {
      "name": "a",
      "value": "'$%%^&*'"
    },
    {
      "name": "b",
      "value": "'中文'"
    },
    {
      "name": "c",
      "value": "'TypeError'"
    }
  ],
  "links": [],
  "hidden": false,
  "retry": false,
  "extra": {
    "severity": "minor",
    "retries": [],
    "categories": [],
    "tags": [
      "@pytest.mark.xfail",
      "advtest"
    ]
  },
  "source": "34f7d937dbb67842.json",
  "parameterValues": [
    "'$%%^&*'",
    "'中文'",
    "'TypeError'"
  ]
}