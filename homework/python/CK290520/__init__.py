# 图书信息包含：
#
# 编号（sid), 书名（name), 价格（price), 简介（summary) 四个信息
# 每个图书信息使用字典形式保存
# 使用列表保存所有图书的信息
# 实现菜单函数(menu)，输出下列信息，返回用户输入的编号
#
# print("*****************************")
# print("*      图书管理系统           *")
# print("* 1. 添加新图书信息           *")
# print("* 2. 通过图书ID修改图书信息      *")
# print("* 3. 通过图书ID删除图书信息      *")
# print("* 4. 通过书名删除图书信息      *")
# print("* 5. 通过图书ID查询图书信息      *")
# print("* 6. 通过书名查询图书信息      *")
# print("* 7. 显示所有图书信息         *")
# print("* 8. 退出系统                *")
# print("*****************************")
# 定义管理函数 (bookManager)，用来实现整体业务逻辑。
#
# 对用户输入内容进行输入校验
# 根据用户输入内容选择不同功能执行
# 因程序中需要多次对编号及书名进行输入，故抽取函数获取对应的数据。
#
# 获取编号函数（getID）, 输入编号并返回（字符串类型）eg. s01
# 获取书名函数（getName）, 输入书名并返回（字符串类型）
# 获取书名函数（getPrice）, 输入价格并返回（整型）
# 获取书名函数（getSummary）, 输入简介并返回（字符串类型）
# 实现添加图书函数(addBook)
#
# 函数参数为编号，书名，价格，简介四个参数
# 返回是否添加成功的结果
# 要求编号不可重复。
# 实现通过编号修改图书信息函数(modifyBookByID)
#
# 参数为图书ID
# 如果图书存在，则进行修改，不存在输出提示
# 返回是否修改成功
# 实现通过图书ID删除图书函数（deleteBookByID）
#
# 参数为图书ID
# 如果图书存在，则进行删除，不存在输出提示，并返回是否删除成功
# 实现通过书名删除图书函数(deleteBookByName)
#
# 参数为书名
# 如果图书存在，则进行删除（同名图书全部删除），不存在输出提示
# 返回是否删除成功
# 实现通过图书ID查询图书函数(queryBookByID)
#
# 参数为图书ID
# 如果图书存在，则输出图书信息，不存在输出提示
# 返回是否查询成功
# 实现通过书名查询图书函数(queryBookByName)
#
# 参数为书名
# 如果图书存在，则输出图书信息（同名图书全部输出），不存在输出提示
# 返回是否删除成功
# 实现显示所有图书信息函数(showAllInfo)
#
# 输出所有图书信息
# 实现数据存储函数（save_data)
#
# 在退出系统时，将数据保存到 db.txt 文件中
# 数据保存格式自定义
# 实现数据加载函数（load_data)
#
# 如果数据文件 db.txt 存在，则从文件中加载数据
# 如果文件不存在则初始为空
